name: DevSecOps para Frontend Móvil

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  seguridad_gitleaks:
    name: Seguridad con Gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Ejecutar Gitleaks para detectar credenciales
        run: gitleaks detect --verbose --redact --source . || true

  analisis_codigo_sonarqube:
    name: Análisis de Código con SonarCloud
    runs-on: ubuntu-latest
    needs: seguridad_gitleaks
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (Necesario para SonarCloud)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  escaneo_dependencias:
    name: Escaneo de Dependencias (OWASP Dependency-Check)
    runs-on: ubuntu-latest
    needs: analisis_codigo_sonarqube
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Descargar y configurar OWASP Dependency-Check
        run: |
          DEPENDENCY_CHECK_VERSION="8.4.0"
          curl -sSL -o dependency-check.zip "https://dl.bintray.com/jeremylong/owasp/dependency-check-${DEPENDENCY_CHECK_VERSION}-release.zip"
          unzip dependency-check.zip -d dependency-check
          chmod +x dependency-check/bin/dependency-check.sh

      - name: Ejecutar escaneo de dependencias
        run: |
          dependency-check/bin/dependency-check.sh --project "FrontendMóvil" --scan . --format HTML --out reports/

      - name: Subir reporte como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/

  escaneo_snyk:
    name: Escaneo de Vulnerabilidades con Snyk
    runs-on: ubuntu-latest
    needs: escaneo_dependencias
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar Snyk CLI
        run: npm install -g snyk

      - name: Autenticar Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Escanear dependencias con Snyk
        run: snyk test --severity-threshold=high

  escaneo_checkov:
    name: Análisis de Configuración con Checkov
    runs-on: ubuntu-latest
    needs: escaneo_snyk
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar Checkov
        run: pip install checkov

      - name: Ejecutar Checkov en archivos de configuración
        run: checkov -d .
