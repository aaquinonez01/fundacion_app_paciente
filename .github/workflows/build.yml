name: CI/CD 

on:
  push:
    branches:
      - main  # Se ejecuta en cada push a la rama principal
  pull_request:
    branches:
      - main

jobs:
  seguridad:
    name: Seguridad (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Permite a SonarQube analizar correctamente los cambios

      - name: Instalar Gitleaks
        run: |
          curl -sSL https://github.com/zricethez/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Ejecutar Gitleaks para detectar credenciales
        run: gitleaks detect --verbose --redact --source . || true  # No falla el pipeline si encuentra credenciales

  analisis_sonarqube:
    name: Análisis de Código (SonarCloud)
    runs-on: ubuntu-latest
    needs: seguridad  # Solo ejecuta SonarCloud después de que Gitleaks termine
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Importante para que SonarQube analice correctamente el historial

      - name: Setup Java (Necesario para SonarCloud)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
